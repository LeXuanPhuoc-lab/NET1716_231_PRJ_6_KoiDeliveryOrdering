@model IEnumerable<KoiDeliveryOrdering.Data.Dtos.Documents.DocumentDto>

@{
    var index = 0;
}

<div class="container w-100">
    <h1>Document list</h1>

    <p>
        <a asp-action="Create">Create New</a>
    </p>


    <div>
        <input id="search-document-number" name="documentNumber" placeholder="Document number..."/>
        <input id="search-document-type" name="documentType" placeholder="Document type..."/>
        <input id="search-transportation-type" name="transportationType" placeholder="Transportation type..."/>
    </div>

    <div style="display: grid;width: 100%">
        <div style="overflow-x: auto">
            <table class="table">
                <thead>
                <tr>
                    <th></th>
                    <th class="text-nowrap">Id</th>
                    <th class="text-nowrap">Delivery order id</th>
                    <th class="text-nowrap">Document number</th>
                    <th class="text-nowrap">Document type</th>
                    <th class="text-nowrap">Issue date</th>
                    <th class="text-nowrap">Expiration date</th>
                    <th class="text-nowrap">Consignee name</th>
                    <th class="text-nowrap">Consignee phone</th>
                    <th class="text-nowrap">Consignee address</th>
                    <th class="text-nowrap">Exporter name</th>
                    <th class="text-nowrap">Exporter phone</th>
                    <th class="text-nowrap">Exporter address</th>
                    <th class="text-nowrap">Dispatch method</th>
                    <th class="text-nowrap">Transportation type</th>
                    <th class="text-nowrap">Shipping fee</th>
                    <th class="text-nowrap">Actions</th>
                </tr>
                </thead>
                <tbody id="document-table-body">

                </tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts {
    <script>

        let documentNumber="";
        let documentType="";
        let transportationType="";

        function debounce(func, delay) {
            let timer;
            return function(...args) {
                clearTimeout(timer);
                timer = setTimeout(() => {
                    func.apply(this, args);
                }, delay);
            };
        }

        // Function to handle search and update results dynamically
        function searchHandler(inputId) {
            const searchTerm = document.getElementById(inputId).value;
            
            if (inputId==="search-document-number"){
                documentNumber=searchTerm||"";
            }
            else if (inputId==="search-document-type"){
                documentType=searchTerm||"";
            }
            else if (inputId==="search-transportation-type"){
                transportationType=searchTerm||"";
            }

            callApiUsingJQuery()
        }

        // Add debounce to both search inputs
        const debouncedSearch1 = debounce(() => searchHandler('search-document-number'), 500);
        const debouncedSearch2 = debounce(() => searchHandler('search-document-type'), 500);
        const debouncedSearch3 = debounce(() => searchHandler('search-transportation-type'), 500);

        // Attach event listeners to input fields
        document.getElementById('search-document-number').addEventListener('input', debouncedSearch1);
        document.getElementById('search-document-type').addEventListener('input', debouncedSearch2);
        document.getElementById('search-transportation-type').addEventListener('input', debouncedSearch3);
        
        
        // Sample Model Data, replace this with your real data
        let model = [];

        function handleChangeSearch(e){
            switch (e.target.name){
                case "documentNumber":{
                    documentNumber=e.target.value;
                    break;
                }
                case "documentType":{
                    documentType=e.target.value;
                    break;
                }
                case "transportationType":{
                    transportationType=e.target.value;
                    break;
                }
            }

            console.log({documentNumber,documentType,transportationType})
        }
        
        function callApiUsingJQuery() {
            $.ajax({
                url: `http://localhost:7000/api/documents?documentNumber=${documentNumber}&documentType=${documentType}&transportationType=${transportationType}`,
                type: 'GET',
                success: function(response) {
                    model=response.data
                    generateTable()
                },
                error: function(error) {
                    console.error('Error:', error);
                }
            });
        }
        
        function generateTable() {
            const table = document.getElementById("document-table-body");

            // Clear the current table content before adding new rows
            table.innerHTML = '';

            let index = 0;

            model.forEach(item => {
                // Create the main document row
                const documentRow = `
        <tr>
          <td class="text-nowrap">
            <button style="width: 30px;height: 30px" id="show-button-${index}" onclick="showDocumentDetails(${index})" class="btn btn-sm btn-primary fw-bold fs-5">+</button>
          </td>
          <td class="text-nowrap">${item.id}</td>
          <td class="text-nowrap">${item.deliveryOrderId}</td>
          <td class="text-nowrap">${item.documentNumber}</td>
          <td class="text-nowrap">${item.documentType}</td>
          <td class="text-nowrap">${item.issueDate}</td>
          <td class="text-nowrap">${item.expirationDate}</td>
          <td class="text-nowrap">${item.consigneeName}</td>
          <td class="text-nowrap">${item.consigneePhone}</td>
          <td class="text-nowrap">${item.consigneeAddress}</td>
          <td class="text-nowrap">${item.exporterName}</td>
          <td class="text-nowrap">${item.exporterPhone}</td>
          <td class="text-nowrap">${item.exporterAddress}</td>
          <td class="text-nowrap">${item.dispatchMethod}</td>
          <td class="text-nowrap">${item.transportationType}</td>
          <td class="text-nowrap">${item.shippingFee}</td>
          <td class="text-nowrap">
            <a href="/Document/Edit/${item.id}">Edit</a> |
            <a href="/Document/Delete/${item.id}">Delete</a>
          </td>
        </tr>
      `;
                table.insertAdjacentHTML('beforeend', documentRow);

                // Create the document details header row
                const detailsHeaderRow = `
        <tr class="dd-item-${index} d-none">
          <th></th>
          <th></th>
          <th class="text-nowrap">Item name</th>
          <th class="text-nowrap">Item category</th>
          <th class="text-nowrap">Quantity</th>
          <th class="text-nowrap">Weight(kg)</th>
        </tr>
      `;
                table.insertAdjacentHTML('beforeend', detailsHeaderRow);

                // Create the document details rows
                item.documentDetails.forEach(detail => {
                    const detailRow = `
          <tr class="dd-item-${index} d-none">
            <td></td>
            <td></td>
            <td class="text-nowrap">${detail.itemName}</td>
            <td class="text-nowrap">${detail.itemCategory}</td>
            <td class="text-nowrap">${detail.itemQuantity}</td>
            <td class="text-nowrap">${detail.itemWeight}</td>
          </tr>
        `;
                    table.insertAdjacentHTML('beforeend', detailRow);
                });

                index++;
            });
        }

        function showDocumentDetails(index) {
            // Toggle visibility of document details
            const detailRows = document.querySelectorAll(`.dd-item-${index}`);
            detailRows.forEach(row => {
                row.classList.toggle('d-none');
            });
        }

        // Call the function to generate the table
        callApiUsingJQuery()
    
    
    
    </script>
}